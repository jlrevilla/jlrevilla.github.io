I"Ê
<p><strong>Escenario</strong>: Tenemos una aplicaci√≥n moderna en Azure que usa m√∫ltiples microservicios y requiere una latencia de milisegundos. Si bien la magia de la app en s√≠ la tienen resuelta los arquitectos que la dise√±aron, lo que toca ahora es analizar la mejor manera de analizar la data.</p>

<p>Por la forma en la que ha sido pensada esta aplicaci√≥n, cada microservicio cuenta con su propia base de datos Cosmos DB, lo quiere decir que por dise√±o no existe consitencia entre estas diversas bases de datos‚Ä¶ y eso est√° bien, pues cada Cosmos solo sabe lo que debe saber para atender a su microservicio. Por otro lado, por temas de econom√≠a, los datos en Cosmos DB tienen un TTL de 30 d√≠as y solo guardan el √∫ltimo mes de las transacciones. Es por estos motivos que existe la necesidad de consolidar la informaci√≥n para anal√≠tica y, al mismo tiempo, para que sirva de fuente al equipo de soporte a los usuarios.</p>

<p><strong>Soluci√≥n</strong>: Aprovechar la funcionalidad de Change Feed en Cosmos DB para agregar cada una de las transacciones realizadas en dos destinos: Un SQL Server que soportar√° los queries de los usuarios de soporte y aquellos reportes operativos m√°s cl√°sicos, y un almacenamiento tipo Azure Data Lake Storage que guardar√° toda la informaci√≥n generada por la aplicaci√≥n en formato parquet. Aqu√≠ nuestro fiel Databricks se encargar√° de prepararla, limpiarla y depositarla en un pool dentro de Azure Synapse para los usuarios de anal√≠tica por SQL o Spark.</p>

<p><img src="/img/CosmosDB to Synapse (Original).jpg" alt="Arquitectura antigua" /></p>

<p><strong>Optimizaci√≥n</strong>: Esta primera arquitectura funciona muy bien pero siempre puede mejorarse. En particular buscamos sacarle provecho a nuevas funcionalidades de los productos en Azure, como es el caso de Synapse Link, para simplificar la arquitectura.</p>

<p>Los Cosmos DB entonces crear√°n r√©plicas columnares usando la caracter√≠stica de <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/analytical-store-introduction">Analytical Stores</a> que estar√°n expuestas directamente en Synapse, sin un proceso de ETL, en tiempo real. Ahora, ¬øpodemos optimizar en algo o aprocechar mejor la data en el ADLS? Pues si, gracias a <a href="https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-query-acceleration">Query Acceleration</a> y aprovechando el c√≥digo en el que viene trabajando Pablo Mugica y su <a href="https://github.com/PabloMugica/nodbdb">nodbdb</a>, ahora las consultas sencillas de soporte pueden responderse haciendo queries directamente al storage.</p>

<p><img src="/img/CosmosDB to Synapse (New).jpg" alt="Arquitectura nueva" /></p>

<p>Y es as√≠ como se ve ahora‚Ä¶ en el papel. Les cuento cuando la tengamos funcionando.</p>
:ET